#!/bin/sh

#
# Copyright (C) Citrix Systems, Inc
#

# varstore-sb-state can either clear a VM's variables related to SecureBoot
# or reset them as though the VM were newly created.

USAGE="usage: $0 <vm-uuid> setup|user"
AUTH_PREFIX=/usr/share/varstored
EFI_GLOBAL_VAR_GUID=8be4df61-93ca-11d2-aa0d-00e098032b8c
EFI_IMAGE_SECURITY_DB_GUID=d719b2cb-3d3a-4596-a3bc-dad00e67656f
ATTR_BRNV_TIME=39

if [ "$1" = "-h" ]; then
    echo $USAGE
    exit 0
fi

if [ "$#" -ne 2 ]; then
    echo $USAGE
    exit 1
fi

uuid="$1"
action="$2"

if [ "$action" != "setup" -a "$action" != "user" ]; then
    echo $USAGE
    exit 1
fi

call_rm() {
    echo "Remove ${2}..."
    varstore-rm "$uuid" "$1" "$2"
}

call_set() {
    echo "Set ${2}..."
    varstore-set "$uuid" "$1" "$2" "$ATTR_BRNV_TIME" "${AUTH_PREFIX}/${2}.auth"
}

call_rm "$EFI_GLOBAL_VAR_GUID" PK
call_rm "$EFI_GLOBAL_VAR_GUID" KEK
call_rm "$EFI_IMAGE_SECURITY_DB_GUID" db
call_rm "$EFI_IMAGE_SECURITY_DB_GUID" dbx

if [ "$action" = "user" ]; then
    call_set "$EFI_GLOBAL_VAR_GUID" PK
    call_set "$EFI_GLOBAL_VAR_GUID" KEK
    call_set "$EFI_IMAGE_SECURITY_DB_GUID" db
    call_set "$EFI_IMAGE_SECURITY_DB_GUID" dbx
fi

exit 0
